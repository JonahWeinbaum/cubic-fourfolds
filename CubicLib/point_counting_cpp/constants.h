
using ff2k_t = unsigned;

// REMARK: These are not Conway polynomials!
// Defining polynomials for Fq.
const unsigned polynomials_addington[] = { 1, // placeholder
  1<<1, // for F_2, take x
  (1<<2) + (1<<1) + 1, // for F_{2^2}, take x^2 + x + 1
  (1<<3) + (1<<1) + 1, // for F_{2^3}, take x^3 + x + 1
  (1<<4) + (1<<1) + 1, // etc.
  (1<<5) + (1<<2) + 1,
  (1<<6) + (1<<1) + 1,
  (1<<7) + (1<<1) + 1,
  (1<<8) + (1<<4) + (1<<3) + (1<<1) + 1,
  (1<<9) + (1<<1) + 1,
  (1<<10) + (1<<3) + 1,
  (1<<11) + (1<<2) + 1,
  (1<<12) + (1<<3) + 1,
  (1<<13) + (1<<4) + (1<<3) + (1<<1) + 1,
  (1<<14) + (1<<5) + 1,
  (1<<15) + (1<<1) + 1, };
/* with n > 15 you'll just run out of memory
  (1<<16) + (1<<5) + (1<<3) + (1<<1) + 1,
  (1<<17) + (1<<3) + 1,
  (1<<18) + (1<<3) + 1,
  (1<<19) + (1<<5) + (1<<2) + (1<<1) + 1,
  (1<<20) + (1<<3) + 1,
  (1<<21) + (1<<2) + 1,
  (1<<22) + (1<<1) + 1 }; */

const unsigned t = 1;

// These are Conway polynomials.
const unsigned polynomials[] = {1, // placeholder
  (t << 1)  + 1,
  (t << 2)  + (t << 1) + 1,
  (t << 3)  + (t << 1) + 1,
  (t << 4)  + (t << 1) + 1,
  (t << 5)  + (t << 2) + 1,
  (t << 6)  + (t << 4) + (t << 3) + (t << 1) + 1,
  (t << 7)  + (t << 1) + 1,
  (t << 8)  + (t << 4) + (t << 3) + (t << 2) + 1,
  (t << 9)  + (t << 4) + 1,
  (t << 10) + (t << 6) + (t << 5) + (t << 3) + (t << 2) + (t << 1) + 1,
  (t << 11) + (t << 2) + 1,
  (t << 12) + (t << 7) + (t << 6) + (t << 5) + (t << 3) + (t << 1) + 1,
  (t << 13) + (t << 4) + (t << 3) + (t << 1) + 1,
  (t << 14) + (t << 7) + (t << 5) + (t << 3) + 1,
  (t << 15) + (t << 5) + (t << 4) + (t << 2) + 1,
  (t << 16) + (t << 5) + (t << 3) + (t << 2) + 1,
  (t << 17) + (t << 3) + 1,
  (t << 18) + (t << 12) + (t << 10) + (t << 1) + 1,
  (t << 19) + (t << 5)  + (t << 2) + (t << 1) + 1,
  (t << 20) + (t << 10) + (t << 9) + (t << 7) + (t << 6) + (t << 5) + (t << 4) + (t << 1) + 1,
  (t << 21) + (t << 6)  + (t << 5) + (t << 2) + 1,
  (t << 22) + (t << 12) + (t << 11) + (t << 10) + (t << 9) + (t << 8) + (t << 6) + (t << 5) + 1
};

// Setup aliasing for the value of q.
#if defined N
const unsigned FINITEFIELDBITSIZE = N;
const unsigned q = 1 << FINITEFIELDBITSIZE;
const unsigned p = polynomials[FINITEFIELDBITSIZE];
#endif

// See the Magma file FqTraceBasis.m (one directory up) to generate the data.
// Store values so that x^2 + x are a basis for the trace zero subspace (except the last is
// a placeholder.
//
// The trace basis is in a modified form of Echelon form, aside from the fact that the
// zero rows are rotated to lie on the diagonal.
const unsigned trace_bases[][22] = {
  { 0 },
  { 0 },
  { 0, 1 },
  { 4, 2, 0 },
  { 0, 4, 2, 1 },
  { 16, 9, 4, 2, 0 },
  { 32, 16, 0, 4, 2, 1 },
  { 64, 32, 16, 8, 4, 2, 0 },
  { 128, 64, 0, 16, 8, 4, 2, 1 },
  { 256, 128, 64, 33, 16, 8, 4, 2, 0 },
  { 512, 256, 160, 64, 0, 16, 8, 4, 2, 1 },
  { 1024, 513, 256, 128, 64, 32, 16, 8, 4, 2, 0 },
  { 2048, 1056, 544, 256, 160, 64, 0, 16, 8, 4, 2, 1 },
  { 4096, 2048, 1024, 513, 256, 128, 64, 32, 16, 8, 4, 2, 0 },
  { 8192, 4096, 2176, 1024, 640, 256, 0, 64, 32, 16, 8, 4, 2, 1 },
  { 16384, 8193, 4096, 2049, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 0 },
  { 32768, 16384, 10240, 4096, 0, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1 },
  { 65536, 32768, 16384, 8192, 4096, 2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 0 },
  { 0, 65536, 32768, 16384, 8192, 4096, 2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1 },
  { 262144, 131073, 65536, 32768, 16384, 8192, 4096, 2048, 1024, 512, 256, 128, 64, 32, 16,
    8, 4, 2, 0 },
  { 526336, 262144, 131072, 65536, 34816, 16384, 10240, 4096, 0, 1024, 512, 256, 128, 64, 32,
    16, 8, 4, 2, 1 },
  { 1048576, 524289, 262144, 131072, 65536, 32769, 16384, 8192, 4096, 2048, 1024, 512, 256,
    128, 64, 32, 16, 8, 4, 2, 0 },
  { 2099200, 1048576, 524288, 262144, 133120, 65536, 32768, 16384, 10240, 4096, 0, 1024, 512,
    256, 128, 64, 32, 16, 8, 4, 2, 1 }
};
  
const unsigned pretrace_bases[][22] = {   
  { 0 },
  { 1 },
  { 1, 2 },
  { 6, 4, 1 },
  { 1, 8, 10, 6 },
  { 14, 20, 10, 8, 1 },
  { 28, 46, 1, 42, 40, 14 },
  { 122, 64, 18, 114, 22, 20, 1 },
  { 80, 36, 1, 238, 44, 234, 232, 214 },
  { 54, 72, 348, 238, 38, 340, 34, 32, 1 },
  { 674, 1016, 948, 490, 1, 1000, 482, 1004, 1006, 42 },
  { 894, 1844, 94, 512, 470, 862, 78, 478, 74, 72, 1 },
  { 2568, 32, 2246, 1752, 1022, 2138, 1, 1736, 2130, 1740, 1742, 3362 },
  { 970, 4110, 5308, 3324, 5398, 280, 906, 5276, 5382, 898, 5378, 5376, 1 },
  { 4174, 6152, 3378, 9994, 9790, 3874, 1, 6216, 10026, 3890, 6208, 3894, 3892, 16362 },
  { 30866, 13260, 3358, 11084, 318, 32012, 2902, 30738, 3422, 286, 2886, 3414, 2882, 2880, 1 },
  { 36278, 27806, 30330, 52664, 1, 24590, 3636, 52172, 27678, 52728, 24622, 52188, 52720, 52184,
    52186, 44234 },
  { 19752, 85294, 112264, 98310, 107008, 16384, 1032, 518, 19496, 112136, 107072, 1064, 19512,
    107080, 19516, 19518, 1 },
  { 1, 148060, 178284, 19456, 28252, 125036, 151088, 133888, 138396, 148316, 19584, 124972,
    133920, 148300, 124964, 148296, 148298, 245434 },
  { 105618, 382640, 193888, 62826, 4320, 167032, 120554, 121496, 1034, 106130, 193632, 4192,
    120490, 1066, 193648, 120482, 193652, 193654, 1 },
  { 248808, 103758, 437328, 999654, 166806, 697182, 6316, 736396, 1, 477422, 104270, 999910,
    697310, 736460, 477390, 999926, 736452, 999922, 999920, 476308 },
  { 40182, 445546, 1483416, 524314, 1452294, 814800, 598202, 1441848, 57376, 2031650, 39158,
    1482904, 1452038, 598074, 57440, 39126, 1452054, 57448, 1452050, 1452048, 1 },
  { 2100120, 2546196, 266010, 2886702, 1357868, 3272942, 591020, 3484192, 2543232, 3596198, 1,
    2547220, 2887214, 3273198, 3484320, 3596262, 2547252, 3273214, 3596270, 3273210, 3273208,
    1963936 }
};
